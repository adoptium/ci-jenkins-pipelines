--- a/make/devkit/Tools.gmk
+++ b/make/devkit/Tools.gmk
@@ -64,13 +64,22 @@
     BASE_URL := https://yum.oracle.com/repo/OracleLinux/OL6/4/base/$(ARCH)/
     LINUX_VERSION := OL6.4
   endif
-else ifeq ($(BASE_OS), Fedora)
-  DEFAULT_OS_VERSION := 41
+else ifeq ($(BASE_OS), Centos)
+  DEFAULT_OS_VERSION := 7
   ifeq ($(BASE_OS_VERSION), )
     BASE_OS_VERSION := $(DEFAULT_OS_VERSION)
   endif
+  BASE_OS_MAJOR_VERSION := $(shell echo $(BASE_OS_VERSION) | cut -d'.' -f1)
+  CENTOS_MIRROR := vault.centos.org
+  ifeq ($(ARCH), x86_64)
+    BASE_URL := http://$(CENTOS_MIRROR)/centos/$(BASE_OS_VERSION)/os/$(ARCH)/Packages/
+  else
+    BASE_URL := http://$(CENTOS_MIRROR)/altarch/$(BASE_OS_VERSION)/os/$(ARCH)/Packages/
+  endif
+  LINUX_VERSION := Centos$(BASE_OS_VERSION)
+else ifeq ($(BASE_OS), Fedora)
   ifeq ($(ARCH), riscv64)
-    BASE_URL := http://fedora.riscv.rocks/repos-dist/f$(BASE_OS_VERSION)/latest/$(ARCH)/Packages/
+    BASE_URL := https://secondary.fedoraproject.org/pub/alt/risc-v/archive/RPMS/riscv64
   else
     LATEST_ARCHIVED_OS_VERSION := 35
     ifeq ($(filter x86_64 armhfp, $(ARCH)), )
@@ -93,16 +102,21 @@
 ################################################################################
 # Define external dependencies
 
-gcc_ver_only := 14.2.0
-binutils_ver_only := 2.43
-ccache_ver_only := 4.10.2
-CCACHE_CMAKE_BASED := 1
-mpfr_ver_only := 4.2.1
-gmp_ver_only := 6.3.0
-mpc_ver_only := 1.3.1
-gdb_ver_only := 15.2
-
-dependencies := gcc binutils ccache mpfr gmp mpc gdb
+# Centos GPG KEYS
+Centos_7_GPG_KEY_noarch := 6341AB2753D78A78A7C27BB124C6A8A7F4A80EB5  #gitleaks:allow
+Centos_7_GPG_KEY_aarch64 := EF8F3CA66EFDF32B36CDADF76C7CB6EF305D49D6 #gitleaks:allow
+Centos_7_GPG_KEY_x86_64 := 6341AB2753D78A78A7C27BB124C6A8A7F4A80EB5  #gitleaks:allow
+Centos_7_GPG_KEY_ppc64le := BAFA3436FC50768E3C3C2E4EA963BBDBF533F4FA #gitleaks:allow
+# Fedora GPG KEYS
+Fedora_19_GPG_KEY_s390x := CA81B2C85E4F4D4A1A3F723407477E65FB4B18E6   #gitleaks:allow
+
+# PGP Signature file extensions
+GCC_SIG := sig
+BINUTILS_SIG := sig
+CCACHE_SIG := asc
+GMP_SIG := sig
+MPC_SIG := sig
+GDB_SIG := sig
 
 $(foreach dep,$(dependencies),$(eval $(dep)_ver := $(dep)-$($(dep)_ver_only)))
 
@@ -181,7 +195,17 @@
         # Only run this if rpm dir is empty.
         ifeq ($(wildcard $(DOWNLOAD_RPMS)/*.rpm), )
 	  cd $(DOWNLOAD_RPMS) && \
-	      wget -r -np -nd $(patsubst %, -A "*%*.rpm", $(RPM_LIST)) $(BASE_URL)
+	    wget -e robots=off -r -np -nd $(patsubst %, -A "*%*.rpm", $(RPM_LIST)) $(BASE_URL)
+	    gpg --keyserver keyserver.ubuntu.com --recv-keys \
+	      $($(BASE_OS)_$(BASE_OS_MAJOR_VERSION)_GPG_KEY_$(ARCH))
+	    gpg --keyserver keyserver.ubuntu.com --recv-keys \
+	      $($(BASE_OS)_$(BASE_OS_MAJOR_VERSION)_GPG_KEY_noarch)
+	    rm -f $(DOWNLOAD_RPMS)/rpm.sig && gpg --armor --export \
+	      $($(BASE_OS)_$(BASE_OS_MAJOR_VERSION)_GPG_KEY_$(ARCH)) > $(DOWNLOAD_RPMS)/rpm.sig
+	    gpg --armor --export \
+	      $($(BASE_OS)_$(BASE_OS_MAJOR_VERSION)_GPG_KEY_noarch) >> $(DOWNLOAD_RPMS)/rpm.sig
+	    rpm --import $(DOWNLOAD_RPMS)/rpm.sig || true
+	    rpm -K $(DOWNLOAD_RPMS)/*.rpm
         endif
 
 ################################################################################
@@ -214,6 +238,14 @@
 
   $$($(1)_FILE) :
 	wget -P $(DOWNLOAD) $$($(1))
+        ifeq ($(1),MPFR)
+	  echo $($(1)_SHA256) $$@ | sha256sum -c
+        else
+	  wget -P $(DOWNLOAD) $$($(1)).$($(1)_SIG)
+	  gpg --keyserver keyserver.ubuntu.com --recv-keys $($(1)_GPG_KEY)
+	  echo -e "5\ny\n" | gpg --batch --command-fd 0 --expert --edit-key $($(1)_GPG_KEY) trust;
+	  gpg --verify $$@.$($(1)_SIG) $$@
+        endif
 endef
 
 # Download and unpack all source packages
@@ -266,6 +298,9 @@
 # have it anyway, but just to make sure...
 # Patch libc.so and libpthread.so to force linking against libraries in sysroot
 # and not the ones installed on the build machine.
+# Remove comment sections from static libraries and C runtime objects
+# to prevent leaking RHEL-specific package versions into
+# devkit-produced binaries.
 $(libs) : $(rpms)
 	@echo Patching libc and pthreads
 	@(for f in `find $(SYSROOT) -name libc.so -o -name libpthread.so`; do \
@@ -275,6 +310,7 @@
 	      -e 's|/lib/||g' ) > $$f.tmp ; \
 	  mv $$f.tmp $$f ; \
 	done)
+	@find $(SYSROOT) -name '*.[ao]' -exec objcopy --remove-section .comment '{}' ';'
 	@mkdir -p $(SYSROOT)/usr/lib
 	@touch $@
 
@@ -386,6 +422,9 @@
 
 # Makefile creation. Simply run configure in build dir.
 # Setting CFLAGS to -O2 generates a much faster ld.
+# Use --enable-deterministic-archives so that make targets that
+# generate "ar" archives, such as "static-libs-image", produce
+# deterministic .a files.
 $(bfdmakes) \
 $(BUILDDIR)/$(binutils_ver)/Makefile \
     : $(BINUTILS_CFG)
@@ -400,6 +439,7 @@
 	      --with-sysroot=$(SYSROOT) \
 	      --disable-nls \
 	      --program-prefix=$(TARGET)- \
+	      --enable-deterministic-archives \
 	      --enable-multilib \
 	      --enable-threads \
 	      --enable-plugins \
